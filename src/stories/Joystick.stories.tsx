import { css } from "@emotion/css";

import { Joystick } from "./Joystick";

export default {
  title: "Example/Joystick",
  argTypes: {
    // auto-detected
  },
};

const parser = new DOMParser();
document.body.style.padding = "0";

type TemplateOptions = {
  handleChildren: string;
  baseStyles: string;
  handleStyles: string;
};

const Template = ((args: TemplateOptions) => {
  const handleChildren = parser.parseFromString(
    args.handleChildren,
    "text/html",
  ).body.firstChild;
  return (
    <div
      class={css`
        height: 100vh;
        width: 100vw;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
      `}
    >
      <div
        class={css`
          height: min(95vh, 95vw);
          width: min(95vh, 95vw);
        `}
      >
        <Joystick
          {...args}
          handleChildren={handleChildren}
          handleClass={css`
            ${args.handleStyles}
          `}
          baseClass={css`
            ${args.baseStyles}
          `}
        />
      </div>
    </div>
  );
}) as ((args: Joystick.Props) => HTMLElement) & { args?: TemplateOptions };

export const General = Template.bind({});
General.args = {
  baseStyles: `
    border-radius: 50%;
    background: gray;
  `,
  handleStyles: `
    background: red;
    width: 25%;
    height: 25%;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: box-shadow 0.3s ease;
    &:active,
    &:focus-visible {
      box-shadow: 0px 0px 10px black;
    }
  `,
  handleChildren: ((
    <span
      class={css`
        color: white;
        font-weight: bold;
        font-family: arial;
        user-select: none;
      `}
      data-details="class is autogenerated by @emotion/css"
    >
      Drag ðŸ•¹ me!
    </span>
  ) as HTMLSpanElement)!.outerHTML,
};
